#!/bin/bash

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

app=$WORKSPACE"/nginx-http-auth"
pidfile=$WORKSPACE"/nginx-http-auth.pid"
logfile=$WORKSPACE"/nginx-http-auth.log"
conf=$WORKSPACE"/conf/app.conf"

function check_pid() {
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    if ! [ -f $conf ];then
        echo "Config file $conf doesn't exist, creating one."
        cp $WORKSPACE"/conf/app.example.conf" $conf
    fi
    nohup $app &> $logfile &
    echo $! > $pidfile
    echo "$app started..., pid=$!"
}

function stop() {
    pid=`cat $pidfile`
    kill $pid
    echo "$app stoped..."
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    cd $WORKSPACE
    echo $1

    if [ "$1" == "linux" ] ;then
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build
    elif [ "$1" == "windows" ] ;then
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build
    else
        go build
    fi

    if [ $? -ne 0 ]; then
        exit $?
    fi
}

function pack() {
    build $1
    git log -1 --pretty=%h > gitversion
    version=`$app -v`
    file_list="nginx-http-auth static views control conf/app.example.conf conf/nginx.conf"
    echo "...tar $app-$version.tar.gz <= $file_list"
    tar zcf $app-$version.tar.gz gitversion $file_list
}

function packbin() {
    build $1
    git log -1 --pretty=%h > gitversion
    version=`$app -v`
    tar zcvf $app-bin-$version.tar.gz nginx-http-auth gitversion
}

function help() {
    echo "$0 build|pack|start|stop|restart|status|tail"
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "tail" ];then
    tailf
elif [ "$1" == "build" ];then
    build $2
elif [ "$1" == "pack" ];then
    pack $2
elif [ "$1" == "packbin" ];then
    packbin $2
else
    help
fi

